<controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:body="clr-namespace:Nepholo.View.Body" 
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:custom="http://metro.mahapps.com/winfx/xaml/shared"
    xmlns:view="clr-namespace:Nepholo.View"
    x:Class="Nepholo.MainWindow"
    Title="Nepholo" MinHeight="360" MinWidth="640" Height="360" Width="640" WindowTransitionsEnabled="True" >

    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
                 Height="{TemplateBinding Height}"
                 Margin="0"
                 Background="{StaticResource LightBlueBrush}"
                 RenderOptions.EdgeMode="Aliased"
                 RenderOptions.BitmapScalingMode="HighQuality">
                <Viewbox Stretch="Fill">
                    <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path Width="38" Height="27.4444" Canvas.Left="19.0245" Canvas.Top="24.206" Stretch="Fill" Fill="White" Data="F1 M 27.0986,51.6256L 27.0961,51.6352L 27.2903,51.6352C 27.3908,51.6391 27.49,51.6505 27.5914,51.6505C 27.6935,51.6505 27.7923,51.6391 27.8928,51.6352L 46.9359,51.6352L 46.9359,51.6298C 47.0756,51.6352 47.2116,51.6505 47.3518,51.6505C 52.6937,51.6505 57.0245,47.2851 57.0245,41.8997C 57.0245,36.5142 52.6937,32.1489 47.3518,32.1489C 47.155,32.1489 46.9621,32.1666 46.7678,32.1784C 45.9377,27.6442 42.0022,24.206 37.2636,24.206C 31.9221,24.206 27.5914,28.5718 27.5914,33.9572C 27.5914,34.0986 27.6066,34.2372 27.6125,34.3778L 27.5914,34.3765C 22.8604,34.3765 19.0245,38.2432 19.0245,43.013C 19.0245,47.6157 22.5982,51.3667 27.0986,51.6256 Z "/>
                    </Canvas>
                </Viewbox>
            </Grid>
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>

    <controls:MetroWindow.Resources>
        <Style x:Key="CustomModernTreeViewStyle" TargetType="{x:Type TreeView}">
            <Setter Property="BorderBrush" Value="{StaticResource DarkBrush}"/>
            <Setter Property="Background" Value="{StaticResource LightBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush9}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <!--<Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>-->
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border>
                                                    <Rectangle Margin="0" Opacity="0" Stroke="Black" StrokeThickness="5" StrokeDashArray="1 2"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <StackPanel>
                                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="Transparent" MinHeight="{TemplateBinding MinHeight}"
                                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <Grid VerticalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.Margin>
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <custom:TreeViewMarginConverter Length="12"/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Margin>
                                                <ToggleButton x:Name="Expander" ClickMode="Press"
                                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Width" Value="16"/>
                                                            <Setter Property="Height" Value="16"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Grid Background="Transparent" Height="16" Width="16">
                                                                            <Path x:Name="ExpandPath" Data="M4,0L8,4 4,8z" Fill="{StaticResource AccentColorBrush}"
                                                                                  HorizontalAlignment="Center"
                                                                                  Stroke="{StaticResource LightBrush}" StrokeThickness="1" VerticalAlignment="Center"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                                    <Setter.Value>
                                                                                        <RotateTransform Angle="45" CenterY="4" CenterX="4"/>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource LightBrush}"/>
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
                                                                            </Trigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsEnabled" Value="False"/>
                                                                                    <Condition Property="IsChecked" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
                                                                            </MultiTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}"/>
                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                                  Content="{TemplateBinding Header}" Grid.Column="1"
                                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                                  ContentSource="Header"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost">
                                            <ItemsPresenter.LayoutTransform>
                                                <ScaleTransform ScaleY="1"/>
                                            </ItemsPresenter.LayoutTransform>
                                        </ItemsPresenter>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="False">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" SourceName="Border" Value="True">
                                            <Setter Property="Margin" TargetName="Border" Value="6,0,0,0"/>
                                            <Setter Property="TextElement.Foreground" Value="{StaticResource LightBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource GrayBrush7}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="IsSelectionActive" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush2}"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <view:EmailToImageConverter x:Key="EmailToImageConverter" />
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.DataContext>
        <Binding Path="ViewModelName" Source="{StaticResource Locator}"/>
    </controls:MetroWindow.DataContext>
    <Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="160" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--<Grid Grid.Row="0" Grid.ColumnSpan="3">
                <Grid Margin="20,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="Path" FontSize="18" />
                    <Button Grid.Column="1" Content="&#xE111;" Click="ButtonBase_OnClick"/>
                </Grid>
            </Grid>-->
            <!---->

            <Grid Background="{StaticResource DarkBrush}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="80" />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ComboBox x:Name="CloudBox" Margin="20,20,10,20" SelectionChanged="CloudBox_OnSelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding}" FontFamily="Segoe UI Symbol" Foreground="{StaticResource DarkBrush}"
                                               TextAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Button Margin="10,20,20,20" Grid.Column="1" Content="+" Click="ButtonBase_OnClick" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <ListBox x:Name="AccountBox" ItemsSource="{Binding App.Accounts}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="40"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Height="50" Width="40">
                                            <Image x:Name="Gravatar" Source="{Binding Text, ElementName=Mail, Converter={StaticResource EmailToImageConverter}}" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                        </Grid>

                                        <StackPanel Grid.Column="1" Margin="20,0">
                                            <TextBlock Text="{Binding Name}" Foreground="White" />
                                            <TextBlock Text="{Binding Mail}" Foreground="White" x:Name="Mail" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
    
                </Grid>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="0" Background="{StaticResource DarkBrush}">

                <TreeView x:Name="FoldersItem" Margin="20,10,0,0"
                          Background="Transparent" Foreground="{StaticResource LightBrush}" 
					       SelectedItemChanged="foldersItem_SelectedItemChanged"
                          Style="{DynamicResource CustomModernTreeViewStyle}">
                    <TreeView.Resources>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Image Width="20" Height="20" Stretch="Fill" Source="{Binding Header, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Converter={x:Static local:HeaderToImageConverter.Instance}}" />-->
                                            <TextBlock FontFamily="Segoe UI Symbol" FontSize="18" Text="&#xE188;" />
                                            <TextBlock Text="{Binding}" Margin="5,0" Foreground="White" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.Resources>
                </TreeView>
            </Grid>

            <GridSplitter Grid.Row="0" Grid.Column="1" ResizeDirection="Columns" Width="5" Grid.RowSpan="2" ResizeBehavior="PreviousAndNext"/>

            <Grid Grid.Column="2" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="80"/>
                </Grid.ColumnDefinitions>

                <!--<Grid Grid.Column="1">
                    <TextBox Text="Search" />
                </Grid>-->
                <!--<Grid/>-->
            </Grid>

            <Grid Grid.Row="1" Grid.Column="2">
                <ScrollViewer>
                    <ItemsControl x:Name="ItemListBox" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <body:WrapPanelData Width="160" Height="200" Margin="10,10,0,0" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Grid>

    </Grid>
</controls:MetroWindow>
